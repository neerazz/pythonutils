import json
from datetime import datetime
from typing import List

from util import datetime_util as du


class VulnerabilityHistory:
    history_id: int
    owner_id: int
    creation_date: datetime
    last_modification_date: datetime
    uuid: str
    type: str
    status: str
    scheduler: int
    alt_targets_used: bool
    is_archived: bool


class VulnerabilityRemediation:
    num_cves: int
    num_hosts: int
    num_remediated_cves: int
    num_impacted_hosts: int
    remediations: List


class VulnerabilityScan:
    template_uuid: str
    permissions: int
    legacy: bool
    type: str
    read: bool
    last_modification_date = ""
    creation_date = ""
    status: str
    uuid: str
    shared: bool
    user_permissions: int
    owner: str
    schedule_uuid: str
    timezone: str
    rrules: str
    starttime = ""
    wizard_uuid: str
    policy_id: int
    agent_scan_launch_type: str
    has_triggers: bool
    name: str
    id: int
    targets: List
    history: List[VulnerabilityHistory]
    notes: List[str]
    remediations: VulnerabilityRemediation

    def __init__(self, iterable=(), **kwargs):
        self.__dict__.update(iterable, **kwargs)
        self.last_modification_date = du.get_date_from_unix(self.last_modification_date)
        self.creation_date = du.get_date_from_unix(self.creation_date)
        self.starttime = du.get_date(self.starttime, du.CCYYMMDD_HHMMSS)

    def __str__(self):
        return self.__repr__()

    def __repr__(self):
        return f"Scan Id: {self.id}, and Name: {self.name}, started at : {self.starttime} is is currently {self.status}"


class VulnerabilityFolder:
    unread_count: int
    custom: int
    default_tag: int
    type: str
    name: str
    id: int

    def __init__(self, iterable=(), **kwargs):
        self.__dict__.update(iterable, **kwargs)

    def __repr__(self):
        return f"Scan Folder Id: {self.id}, and Name: {self.name}, has total {self.unread_count} unread count."


class VulnerabilityScans:
    folders: List[VulnerabilityFolder]
    scans: List[VulnerabilityScan]

    def __init__(self, iterable=(), **kwargs):
        self.__dict__.update(iterable, **kwargs)

    def __str__(self):
        return self.__repr__()

    def __repr__(self):
        return f"{self.folders}\n Scans : \n{self.scans}."


if __name__ == '__main__':
    print('This is a sample Script, Where a json is converted to object')
    scans_response_file_name = "../responses/List_scans_response.json"
    scans_response_file = open(scans_response_file_name)
    scans_response_json = json.load(scans_response_file)
    scans_object = VulnerabilityScans(scans_response_json)
    print(scans_object)
